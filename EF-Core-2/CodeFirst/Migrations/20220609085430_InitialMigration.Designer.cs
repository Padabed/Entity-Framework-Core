// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using CodeFirst.Models;

#nullable disable

namespace CodeFirst.Migrations
{
    [DbContext(typeof(s22284Context))]
    [Migration("20220609085430_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Test2.Models.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClient"), 1L, 1);

                    b.Property<string>("ClientFirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClientLastName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("IdClient")
                        .HasName("Client_PK");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Test2.Models.ClientOrder", b =>
                {
                    b.Property<int>("IdClientOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClientOrder"), 1L, 1);

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdEmployee")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdClientOrder")
                        .HasName("IdClientOrder_PK");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdEmployee");

                    b.ToTable("CleitnOrder");
                });

            modelBuilder.Entity("Test2.Models.Confectionery", b =>
                {
                    b.Property<int>("IdConfectionery")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdConfectionery"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("PricePerOne")
                        .HasColumnType("real");

                    b.HasKey("IdConfectionery")
                        .HasName("IdConfectionery_PK");

                    b.ToTable("Confectionery");
                });

            modelBuilder.Entity("Test2.Models.Confectionery_ClientOrder", b =>
                {
                    b.Property<int>("IdConfectionery")
                        .HasColumnType("int");

                    b.Property<int>("IdClientOrder")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("IdConfectionery", "IdClientOrder")
                        .HasName("Confectionery_ClientOrder_PK");

                    b.HasIndex("IdClientOrder");

                    b.ToTable("Confectionery_ClientOrder", (string)null);
                });

            modelBuilder.Entity("Test2.Models.Employee", b =>
                {
                    b.Property<int>("IdEmployee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmployee"), 1L, 1);

                    b.Property<string>("EmpFirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpLastName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("IdEmployee")
                        .HasName("IdEmployee_PK");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Test2.Models.ClientOrder", b =>
                {
                    b.HasOne("Test2.Models.Client", "IdClientNav")
                        .WithMany("ClientOrders")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("Client_ClientOrder_FK");

                    b.HasOne("Test2.Models.Employee", "IdEmployeeNav")
                        .WithMany("ClientOrders")
                        .HasForeignKey("IdEmployee")
                        .IsRequired()
                        .HasConstraintName("Employee_ClientOrder_FK");

                    b.Navigation("IdClientNav");

                    b.Navigation("IdEmployeeNav");
                });

            modelBuilder.Entity("Test2.Models.Confectionery_ClientOrder", b =>
                {
                    b.HasOne("Test2.Models.ClientOrder", "IdClientOrderNav")
                        .WithMany("Confectionery_ClientOrders")
                        .HasForeignKey("IdClientOrder")
                        .IsRequired()
                        .HasConstraintName("ClientOrder_FK");

                    b.HasOne("Test2.Models.Confectionery", "IdConfectioneryNav")
                        .WithMany("Confectionery_ClientOrders")
                        .HasForeignKey("IdConfectionery")
                        .IsRequired()
                        .HasConstraintName("Confectionery_FK");

                    b.Navigation("IdClientOrderNav");

                    b.Navigation("IdConfectioneryNav");
                });

            modelBuilder.Entity("Test2.Models.Client", b =>
                {
                    b.Navigation("ClientOrders");
                });

            modelBuilder.Entity("Test2.Models.ClientOrder", b =>
                {
                    b.Navigation("Confectionery_ClientOrders");
                });

            modelBuilder.Entity("Test2.Models.Confectionery", b =>
                {
                    b.Navigation("Confectionery_ClientOrders");
                });

            modelBuilder.Entity("Test2.Models.Employee", b =>
                {
                    b.Navigation("ClientOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
